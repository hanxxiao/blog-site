import{_ as t,o as a,c as s,U as d}from"./chunks/framework.32b227f7.js";const u=JSON.parse('{"title":"git stash","description":"","frontmatter":{},"headers":[],"relativePath":"blog/gitStash.md","filePath":"blog/gitStash.md"}'),e={name:"blog/gitStash.md"},o=d('<h1 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">​</a></h1><blockquote><p>当我们突然接到新的任务, 但是项目已经开发了一半, 不想提交可以使用 <code>git stash</code></p></blockquote><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><blockquote><p>会保存当前工作进度, 会把暂存区和工作区的改动保存到一个未完结变更的堆栈中; 在执行 <code>git stash</code> 之后, 使用<code>git status</code> 就会发现当前是一个干净的工作区, 没有任何改动.</p></blockquote><div class="tip custom-block"><p class="custom-block-title">git stash</p><ul><li><code>git stash</code> 是本地, 不会上传到服务器上</li><li>可以使用 <code>git stash save &#39;message&#39;</code> 添加一些注释</li></ul></div><h2 id="相关命令" tabindex="-1">相关命令 <a class="header-anchor" href="#相关命令" aria-label="Permalink to &quot;相关命令&quot;">​</a></h2><table><thead><tr><th>命令名</th><th>作用</th></tr></thead><tbody><tr><td>git stash</td><td>隐藏当前的工作现场, 此时, git status</td></tr><tr><td>git stash list</td><td>查看所有隐藏, 每一行的冒号前面的字符串就是标识此隐藏的id</td></tr><tr><td>git stash apply</td><td>重新显示标识为 id 的隐藏(可以指定具体的id)</td></tr><tr><td>git stash drop</td><td>git apply恢复隐藏后, 需要手动删除 list 列表中的记录(可以指定具体的id)</td></tr><tr><td>git stash pop</td><td>恢复最新的进度到工作区, 并删除</td></tr><tr><td>git stash pop stash@[stash_id]</td><td>恢复指定的进度到工作区, 并删除</td></tr><tr><td>git stash show</td><td>显示当前最新<code>stash</code>的改动(可以指定具体的id)</td></tr><tr><td>git stash clear</td><td>删除所有的 <code>stash</code> 记录</td></tr></tbody></table><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">使用过程</p><ol><li>首先使用 <code>git stash list</code> 查看是否有没有 <code>stash</code> 的记录</li><li>如果想应用回指定版本, <code>git stash apply n</code>, n为stash list结果里面的序号(id)</li></ol></div>',9),i=[o];function c(l,h,r,g,n,p){return a(),s("div",null,i)}const b=t(e,[["render",c]]);export{u as __pageData,b as default};
